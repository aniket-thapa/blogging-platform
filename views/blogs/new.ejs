<!DOCTYPE html>
<html lang="en" class="h-full">
  <head>
    <title>Create New Blog</title>
    <script
      src="https://cdn.tiny.cloud/1/lc69uvdgzdmy12x9k70w8diqldhmdteivxioy0lq1zkiio6x/tinymce/7/tinymce.min.js"
      referrerpolicy="origin"
    ></script>
    <link rel="stylesheet" href="/public/css/tailwind.css" />
  </head>
  <body
    class="h-full bg-gray-100 text-gray-900 dark:bg-gray-900 dark:text-gray-100"
  >
    <%- include('../partials/navbar') %>

    <div
      class="min-h-screen flex flex-col justify-center items-center px-4 sm:px-6 lg:px-8 py-8"
    >
      <!-- Page Title -->
      <h1
        class="text-2xl sm:text-3xl md:text-4xl font-extrabold text-blue-600 dark:text-blue-400 mb-6 text-center"
      >
        Create New Blog
      </h1>

      <!-- Blog Form -->
      <form
        action="/blogs/new"
        method="POST"
        enctype="multipart/form-data"
        onsubmit="tinymce.get('content').save();"
        class="w-full max-w-lg sm:max-w-xl lg:max-w-4xl bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6 sm:p-8"
      >
        <!-- Title Field -->
        <div class="mb-4">
          <label
            for="title"
            class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2"
            >Title
            <span id="titleCharCount" class="text-gray-500 text-xs"
              >(0/100)</span
            ></label
          >
          <input
            type="text"
            id="title"
            name="title"
            required
            maxlength="100"
            class="w-full border border-gray-300 dark:border-gray-600 bg-gray-50 dark:bg-gray-700 text-gray-900 dark:text-gray-100 rounded-lg p-3 focus:ring-2 focus:ring-blue-500 focus:outline-none"
            oninput="updateCharCount()"
          />
        </div>

        <!-- ///////////////////////////// -->
        <!-- Tags Input Wrapper -->
        <div class="mb-4">
          <label
            for="tags"
            class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2"
          >
            Enter Tags
          </label>
          <div
            class="flex flex-wrap items-center gap-2 border border-gray-300 dark:border-gray-600 bg-gray-50 dark:bg-gray-700 text-gray-900 dark:text-gray-100 rounded-lg p-3 focus-within:ring-2 focus-within:ring-blue-500"
          >
            <div id="tags-container" class="flex flex-wrap gap-2"></div>
            <input
              type="text"
              id="tag-input"
              class="p-1 flex-1 placeholder-gray-400 bg-gray-50 dark:bg-gray-700 text-gray-900 dark:text-gray-100 outline-none"
              placeholder="Type and press space..."
            />
          </div>

          <!-- Hidden input to store the tags -->
          <input type="hidden" name="tags" id="hidden-tags" />
        </div>

        <!-- Cover Image Upload with 16:9 Preview -->
        <div class="mb-6">
          <label
            for="coverImage"
            class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2"
          >
            Cover Image
            <span class="text-xs text-gray-500"
              >(Recommended: 16:9 aspect ratio)</span
            >
          </label>
          <input
            type="file"
            id="coverImage"
            name="coverImage"
            accept="image/*"
            class="block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100 dark:file:bg-blue-900 dark:file:text-blue-200"
          />

          <!-- Preview Container with Fixed Aspect Ratio -->
          <div
            class="relative w-full pt-[56.25%] mt-4 rounded-lg overflow-hidden bg-gray-200 dark:bg-gray-700"
          >
            <img
              id="previewImage"
              class="absolute top-0 left-0 w-full h-full object-cover hidden rounded-lg transition"
              alt="Image preview"
            />
          </div>
        </div>

        <!-- ///////////////////////////// -->

        <!-- Content Field -->
        <div class="mb-4">
          <label
            for="content"
            class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2"
          >
            Content
          </label>
          <textarea
            id="content"
            name="content"
            class="w-full border border-gray-300 dark:border-gray-600 bg-gray-50 dark:bg-gray-700 text-gray-900 dark:text-gray-100 rounded-lg p-3 focus:outline-none"
          ></textarea>
        </div>

        <!-- Submit Button -->
        <button
          type="submit"
          class="w-full bg-blue-500 text-white py-2 sm:py-3 rounded-lg hover:bg-blue-600 transition"
        >
          Publish Blog
        </button>
      </form>
    </div>

    <div class="relative mt-24"><%- include('../partials/footer') %></div>

    <script>
      tinymce.init({
        selector: '#content',
        menubar: true,
        branding: false,
        height: 600,
        plugins: 'link image lists table code',
        toolbar:
          'undo redo | styleselect | formatselect | bold italic underline | alignleft aligncenter alignright | bullist numlist | link image',
        setup: function (editor) {
          editor.on('init', function () {
            var textarea = document.getElementById('content');
            textarea.style.display = 'none';
            textarea.removeAttribute('aria-hidden');
          });
        },
      });

      // Preview Image
      document
        .getElementById('coverImage')
        .addEventListener('change', function (e) {
          const fileInput = e.target;
          const file = fileInput.files[0];
          const previewImg = document.getElementById('previewImage');

          if (file && file.type.startsWith('image/')) {
            const url = URL.createObjectURL(file);
            previewImg.src = url;
            previewImg.classList.remove('hidden');
          } else {
            previewImg.src = '';
            previewImg.classList.add('hidden');
            fileInput.value = '';
            alert(
              'Please upload a valid image file (e.g., .jpg, .png, .webp).'
            );
          }
        });

      // Validations in Inputs:
      document
        .getElementById('title')
        .addEventListener('input', function (event) {
          let inputValue = event.target.value;
          let formattedInput = inputValue.replace(/\s{2,}/g, ' ');
          event.target.value = formattedInput;
        });

      // Check Title Character Size
      function updateCharCount() {
        const titleInput = document.getElementById('title');
        const titleCharCount = document.getElementById('titleCharCount');
        const maxLength = 100;

        // Ensure max length is not exceeded
        if (titleInput.value.length > maxLength) {
          titleInput.value = titleInput.value.substring(0, maxLength);
        }

        // Update character count text
        const currentLength = titleInput.value.length;
        titleCharCount.textContent = `(${currentLength}/${maxLength})`;

        // Change color to red when limit is reached
        if (currentLength >= maxLength) {
          titleCharCount.classList.add('text-red-500');
        } else {
          titleCharCount.classList.remove('text-red-500');
        }
      }

      // Adding Tags
      const tagInput = document.getElementById('tag-input');
      const tagsContainer = document.getElementById('tags-container');
      const hiddenTagsInput = document.getElementById('hidden-tags');
      const form = document.querySelector('form');

      let tags = [];

      tagInput.addEventListener('keydown', function (event) {
        if (event.key === ' ' && this.value.trim() !== '') {
          event.preventDefault();
          addTag(this.value.trim());
          this.value = '';
        }
      });

      function addTag(tag) {
        if (!tags.includes(tag)) {
          tags.push(tag);
          renderTags();
          updateHiddenInput();
        }
      }

      function removeTag(tag) {
        tags = tags.filter((t) => t !== tag);
        renderTags();
        updateHiddenInput();
      }

      function renderTags() {
        tagsContainer.innerHTML = '';
        tags.forEach((tag) => {
          const tagElement = document.createElement('div');
          tagElement.className =
            'flex items-center gap-1 bg-blue-50 dark:bg-blue-900 text-blue-700 dark:text-blue-200 px-2 py-1 border border-blue-300 dark:border-blue-700 rounded-full text-md';

          const hashSymbol = document.createElement('span');
          hashSymbol.textContent = `#${tag}`;

          const closeButton = document.createElement('button');
          closeButton.className =
            'mx-1 text-blue-700 dark:text-blue-200 hover:text-red-500 dark:hover:text-red-500 transition';
          closeButton.innerHTML = `<i class="fa-solid fa-xmark"></i>`;
          closeButton.onclick = () => removeTag(tag);

          tagElement.appendChild(hashSymbol);
          tagElement.appendChild(closeButton);
          tagsContainer.appendChild(tagElement);
        });
      }

      function updateHiddenInput() {
        hiddenTagsInput.value = JSON.stringify(tags);
      }

      // Form Submission
      form.addEventListener('submit', async function (event) {
        event.preventDefault();
        updateHiddenInput();
        tinymce.get('content').save();
        const formData = new FormData(form);
        try {
          const response = await fetch('/blogs/new', {
            method: 'POST',
            body: formData,
          });

          const result = await response.json();

          if (response.ok) {
            window.location.href = `/blogs/${result.blogId}`;
          } else {
            throw new Error(result.error || 'An error occurred');
          }
        } catch (err) {
          alert(err.message);
          console.error(err);
        }
      });
    </script>
    <script async defer src="/public/js/scrollToTop.js"></script>
  </body>
</html>
