<!DOCTYPE html>
<html lang="en" class="scroll-smooth">
  <head>
    <% function stripHTML(html) { return html.replace(/<[^>]*>/g, ''); } const
    cleanDescription = stripHTML(blog.content).replace(/\s+/g,
    '').trim().slice(0, 160); %>

    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title><%= blog.title %></title>
    <meta name="title" content="<%= blog.title %>" />
    <meta name="description" content="<%= cleanDescription  %>" />
    <meta name="author" content="<%= blog.author.username %>" />
    <meta
      name="keywords"
      content="<%= blog.tags ? blog.tags.join(', ') : '' %>"
    />
    <meta property="og:type" content="article" />
    <meta
      property="og:url"
      content="http://blogging-platform-y0pb.onrender.com/blog/<%= blog._id %>"
    />
    <meta property="og:title" content="<%= blog.title %>" />
    <meta property="og:description" content="<%= cleanDescription %>" />
    <meta property="og:image" content="<%= blog.coverImage ? blog.coverImage.url
    : "" %>" />

    <!-- Twitter -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta
      name="twitter:url"
      content="https://yourdomain.com/blog/<%= blog.slug %>"
    />
    <meta name="twitter:title" content="<%= blog.title %>" />
    <meta name="twitter:description" content="<%= cleanDescription %>" />
    <meta name="twitter:image" content="<%= blog.coverImage ?
    blog.coverImage.url : "" %>" />

    <link rel="stylesheet" href="/public/css/tailwind.css" />
    <script
      src="https://kit.fontawesome.com/9ca9aa7819.js"
      crossorigin="anonymous"
    ></script>
    <script src="/public/js/showNotification.js"></script>
  </head>
  <body class="flex flex-col min-h-screen dark:bg-gray-900 dark:text-gray-100">
    <%- include('../partials/navbar') %>

    <div>
      <div class="max-w-screen-md mx-auto px-4 py-8">
        <article>
          <!-- Blog Title -->
          <h1
            class="sm:text-5xl text-3xl break-words font-bold text-gray-900 dark:text-gray-200 mb-4 tracking-tight"
          >
            <%= blog.title %>
          </h1>

          <!-- Blog Image -->
          <% if (blog.coverImage && blog.coverImage.url) { %>
          <div
            class="w-full mt-6 aspect-w-16 aspect-h-9 mb-8 rounded-xl overflow-hidden shadow-md border border-gray-200 dark:border-gray-700"
          >
            <img
              src="<%= blog.coverImage.url %>"
              alt="Blog Cover Image"
              class="w-full h-full object-cover transition-transform duration-500 hover:scale-[1.02]"
              loading="lazy"
            />
          </div>
          <% } %>

          <!-- Edit and Delete Buttons -->
          <% if (user && blog.author._id.equals(user._id)) { %>

          <div class="m-4 flex gap-6 justify-end items-center">
            <a
              href="/blogs/<%= blog._id %>/edit"
              class="bg-blue-500 text-white py-2 px-4 rounded-xl hover:bg-blue-600 transition focus:ring-2 focus:ring-blue-700"
            >
              Edit
            </a>
            <button
              onclick="deleteBlog('<%= blog._id %>')"
              class="bg-red-500 text-white py-2 px-4 rounded-xl hover:bg-red-600 transition focus:ring-2 focus:ring-red-700"
            >
              Delete
            </button>
          </div>

          <% } %>

          <!-- Author and Date -->
          <div
            class="text-sm md:text-base flex justify-between items-center text-md text-gray-800 dark:text-gray-300 mb-6"
          >
            <div class="flex gap-2 sm:gap-5 sm:flex-row flex-col">
              <div class="flex gap-2 sm:gap-3 sm:flex-row flex-col">
                <div
                  class="sm:pr-4 sm:border-r sm:border-gray-300 dark:sm:border-gray-600"
                >
                  <span class="font-medium">
                    <i class="fa-regular fa-circle-user font-bold"></i>
                    <%= blog.author.username %>
                  </span>
                  <span>
                    on <%= new Intl.DateTimeFormat('en-US', { year: 'numeric',
                    month: 'short' , day: 'numeric' }).format(blog.createdAt)
                    %></span
                  >
                </div>
                <div>
                  <span
                    >Edited on <%= new Intl.DateTimeFormat('en-US', { year:
                    'numeric', month: 'short' , day: 'numeric'
                    }).format(blog.updatedOn) %></span
                  >
                </div>
              </div>
              <span id="reading-time"></span>
            </div>
            <% if (user) { %>
            <!-- Bookmark Button -->
            <button
              id="bookmark-button"
              class="<%= user && user.savedBlogs.includes(blog._id.toString()) ? 'bg-blue-500 text-white' : 'hover:bg-gray-200 dark:hover:bg-gray-700 text-gray-900 dark:text-gray-200' %> px-3 py-2 rounded-lg transition"
              data-blog-id="<%= blog._id %>"
              data-saved="<%= user && user.savedBlogs.includes(blog._id.toString()) %>"
              onclick="toggleSaveBlog(this)"
            >
              <i
                class="<%= user && user.savedBlogs.includes(blog._id.toString()) ? 'fa-solid' : 'fa-regular' %> fa-bookmark"
              ></i>
            </button>
            <% } %>
          </div>

          <!-- Tags SHow Section -->
          <div class="my-4">
            <div class="flex flex-wrap gap-2">
              <% blog.tags.forEach(tag => { %>
              <a
                href="/blogs/tags/<%= tag %>"
                class="inline-block px-3 py-1 bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-200 text-sm rounded-lg hover:bg-gray-200 dark:hover:bg-gray-700"
              >
                #<%= tag %>
              </a>
              <% }) %>
            </div>
          </div>

          <!-- Like, Comment and Share Row -->
          <hr class="border-gray-200 dark:border-gray-800 my-1" />
          <div
            class="my-2 text-gray-700 dark:text-gray-300 flex justify-between"
          >
            <div class="flex gap-4">
              <div
                class="group relative flex gap-2 content-center border border-gray-300 dark:border-gray-700 rounded-2xl px-2 py-1 hover:bg-gray-100 dark:hover:bg-gray-800"
              >
                <% if (user && blog.likes.includes(user._id)) { %>
                <button class="like-button2 transition-all duration-300">
                  <i class="fa-solid fa-heart text-red-500 heart-beat"></i>
                </button>
                <!-- Tooltip -->
                <div
                  id="like-tooltip"
                  class="absolute font-medium z-50 invisible group-hover:visible bottom-full left-1/2 -translate-x-1/2 mb-2 bg-gray-800 dark:bg-gray-100 text-white dark:text-gray-900 text-sm px-2 py-1 rounded-md whitespace-nowrap"
                >
                  Unlike
                </div>
                <% } else { %>
                <button class="like-button2 transition-all duration-300">
                  <i class="fa-regular fa-heart"></i>
                </button>
                <!-- Tooltip -->
                <div
                  id="like-tooltip"
                  class="absolute font-medium z-50 invisible group-hover:visible bottom-full left-1/2 -translate-x-1/2 mb-2 bg-gray-800 dark:bg-gray-100 text-white dark:text-gray-900 text-sm px-2 py-1 rounded-md whitespace-nowrap"
                >
                  Like
                </div>
                <% } %>
                <span class="likes-count"><%= blog.likes.length %></span>
              </div>

              <a href="#comments"
                ><div
                  class="group relative flex gap-2 content-center border border-gray-300 dark:border-gray-700 rounded-2xl px-2 py-1 hover:bg-gray-100 dark:hover:bg-gray-800"
                >
                  <span><i class="fa-regular fa-comment"></i></span
                  ><span><%= blog.comments.length %></span>

                  <!-- Tooltip -->
                  <div
                    class="absolute font-medium z-50 invisible group-hover:visible bottom-full left-1/2 -translate-x-1/2 mb-2 bg-gray-800 dark:bg-gray-100 text-white dark:text-gray-900 text-sm px-2 py-1 rounded-md whitespace-nowrap"
                  >
                    Comments
                  </div>
                </div></a
              >
            </div>
            <div class="font-normal text-sm">
              <div
                onclick="navigator.clipboard.writeText(window.location.origin + '/blogs/<%= blog._id %>'); showNotification('Link Copied to Clipboard!', 2500);"
                class="group relative flex gap-2 content-center cursor-pointer border border-gray-300 dark:border-gray-700 rounded-2xl px-2 py-1 hover:bg-gray-100 dark:hover:bg-gray-800"
              >
                <span><i class="fa-solid fa-link text-gray-500"></i></span>
                <span>Share</span>
                <!-- Tooltip -->
                <div
                  class="absolute font-medium z-50 invisible group-hover:visible bottom-full left-1/2 -translate-x-1/2 mb-2 bg-gray-800 dark:bg-gray-100 text-white dark:text-gray-900 text-sm px-2 py-1 rounded-md whitespace-nowrap"
                >
                  Copy Link
                </div>
              </div>
            </div>
          </div>
          <hr class="border-gray-200 dark:border-gray-800 my-1 mb-6" />

          <!-- Blog Content -->

          <div
            id="blog-content"
            class="blog-content text-gray-900 dark:text-gray-300 text-lg space-y-6"
          >
            <%- blog.content %>
          </div>
        </article>

        <!-- Like, Comment and Share Row -->
        <hr class="border-gray-200 dark:border-gray-800 my-1 mt-12" />
        <div class="my-2 text-gray-700 dark:text-gray-300 flex justify-between">
          <div class="flex gap-4">
            <div
              class="group relative flex gap-2 content-center border border-gray-300 dark:border-gray-700 rounded-2xl px-2 py-1 hover:bg-gray-100 dark:hover:bg-gray-800"
            >
              <% if (user && blog.likes.includes(user._id)) { %>
              <button class="like-button2 transition-all duration-300">
                <i class="fa-solid fa-heart text-red-500 heart-beat"></i>
              </button>
              <!-- Tooltip -->
              <div
                id="like-tooltip"
                class="absolute font-medium z-50 invisible group-hover:visible bottom-full left-1/2 -translate-x-1/2 mb-2 bg-gray-800 dark:bg-gray-100 text-white dark:text-gray-900 text-sm px-2 py-1 rounded-md whitespace-nowrap"
              >
                Unlike
              </div>
              <% } else { %>
              <button class="like-button2 transition-all duration-300">
                <i class="fa-regular fa-heart"></i>
              </button>
              <!-- Tooltip -->
              <div
                id="like-tooltip"
                class="absolute font-medium z-50 invisible group-hover:visible bottom-full left-1/2 -translate-x-1/2 mb-2 bg-gray-800 dark:bg-gray-100 text-white dark:text-gray-900 text-sm px-2 py-1 rounded-md whitespace-nowrap"
              >
                Like
              </div>
              <% } %>
              <span class="likes-count"><%= blog.likes.length %></span>
            </div>
            <a href="#comments"
              ><div
                class="group relative flex gap-2 content-center border border-gray-300 dark:border-gray-700 rounded-2xl px-2 py-1 hover:bg-gray-100 dark:hover:bg-gray-800"
              >
                <span><i class="fa-regular fa-comment"></i></span
                ><span><%= blog.comments.length %></span>
                <!-- Tooltip -->
                <div
                  class="absolute font-medium z-50 invisible group-hover:visible bottom-full left-1/2 -translate-x-1/2 mb-2 bg-gray-800 dark:bg-gray-100 text-white dark:text-gray-900 text-sm px-2 py-1 rounded-md whitespace-nowrap"
                >
                  Comments
                </div>
              </div></a
            >
          </div>
          <div class="font-normal text-sm">
            <div
              onclick="navigator.clipboard.writeText(window.location.origin + '/blogs/<%= blog._id %>'); showNotification('Link Copied to Clipboard!', 2500);"
              class="group relative flex gap-2 content-center cursor-pointer border border-gray-300 dark:border-gray-700 rounded-2xl px-2 py-1 hover:bg-gray-100 dark:hover:bg-gray-800"
            >
              <span><i class="fa-solid fa-link text-gray-500"></i></span>
              <span>Share</span>
              <!-- Tooltip -->
              <div
                class="absolute font-medium z-50 invisible group-hover:visible bottom-full left-1/2 -translate-x-1/2 mb-2 bg-gray-800 dark:bg-gray-100 text-white dark:text-gray-900 text-sm px-2 py-1 rounded-md whitespace-nowrap"
              >
                Copy Link
              </div>
            </div>
          </div>
        </div>
        <hr class="border-gray-200 dark:border-gray-800 mt-1 mb-4" />

        <!-- Comments Section -->
        <h3
          id="comments"
          class="text-2xl font-bold text-gray-800 dark:text-gray-200 mb-4"
        >
          Comments
        </h3>
        <div class="space-y-4 mb-6">
          <% blog.comments.forEach(comment => { %>
          <div
            id="comment-<%= comment._id %>"
            class="border rounded-lg p-4 bg-gray-50 dark:bg-gray-800"
          >
            <p class="relative font-medium text-gray-800 dark:text-gray-300">
              <%= comment.author.username %>
              <span>(<%= comment.author.useremail %>)</span>

              <% if (user && user._id.toString() ===
              comment.author._id.toString()) { %>
              <button
                class="absolute right-0 text-gray-400 dark:text-gray-600 hover:text-red-500 dark:hover:text-red-700 transition-colors"
                onclick="deleteComment('<%= comment._id %>')"
              >
                <i class="fa-solid fa-trash-can"></i>
              </button>
              <% } %> <% if (user && blog.author._id.toString() ===
              user._id.toString()) { %>
              <button
                class="absolute right-0 text-gray-400 dark:text-gray-600 hover:text-red-500 dark:hover:text-red-700 transition-colors"
                onclick="deleteComment('<%= comment._id %>')"
              >
                <i class="fa-solid fa-trash-can"></i>
              </button>
              <% } %>
            </p>
            <p class="text-gray-700 dark:text-gray-400">
              <%= comment.content %>
            </p>
            <p class="text-sm text-gray-600 dark:text-gray-500">
              Commented on <%= comment.createdAt.toDateString() %>
            </p>
          </div>
          <% }) %>
        </div>

        <% if (user) { %>
        <!-- Add Comment Form -->
        <form
          id="commentForm"
          action="/blogs/<%= blog._id %>/comments"
          method="POST"
          class="space-y-4"
        >
          <textarea
            name="content"
            required
            class="w-full border-2 border-gray-300 dark:border-gray-600 rounded p-2 focus:outline-none focus:border-blue-400 dark:focus:border-blue-600 bg-white dark:bg-gray-700 text-gray-800 dark:text-gray-200"
            placeholder="Write your comment..."
          ></textarea>
          <button
            type="submit"
            class="bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-700 focus:ring transition"
          >
            Add Comment
          </button>
        </form>
        <% } else { %>
        <div class="text-gray-600 dark:text-gray-400">
          <p class="mb-4">
            Please
            <a href="/login" class="text-blue-500 hover:underline">login</a>
            to like and comment.
          </p>
        </div>
        <% } %>

        <!-- Newsletter Section -->
        <div
          class="mt-16 mb-8 border-t border-gray-200 dark:border-gray-700 pt-8"
        >
          <h3 class="text-2xl font-bold text-gray-800 dark:text-gray-200 mb-4">
            Subscribe to our Newsletter
          </h3>
          <p class="text-gray-600 dark:text-gray-400 mb-4">
            Get the latest updates and articles directly in your inbox.
          </p>
          <!-- action="/subscribe" method="POST" -->
          <form class="flex gap-2">
            <input
              type="email"
              name="email"
              required
              placeholder="Your email address"
              class="w-full border-2 border-gray-300 dark:border-gray-600 rounded p-2 focus:outline-none focus:border-blue-400 dark:focus:border-blue-600 bg-white dark:bg-gray-700 text-gray-800 dark:text-gray-200"
            />
            <button
              type="submit"
              class="bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-700 focus:ring transition"
            >
              Subscribe
            </button>
          </form>
        </div>
      </div>
    </div>
    <div class="relative mt-24"><%- include('../partials/footer') %></div>

    <div
      id="notification-container"
      class="fixed top-20 right-5 space-y-3 z-50"
    ></div>
    <script>
      // Reading Time Count
      function stripHTML(html) {
        return html.replace(/<[^>]*>/g, '');
      }

      function countWords(text) {
        return text.trim().split(/\s+/).length;
      }

      function calculateReadingTime(content) {
        const plainText = stripHTML(content);
        const wordCount = countWords(plainText);
        const wordsPerMinute = 200;
        return Math.ceil(wordCount / wordsPerMinute);
      }

      document.addEventListener('DOMContentLoaded', () => {
        const blogContent = document.getElementById('blog-content').innerHTML;
        const readingTime = calculateReadingTime(blogContent);
        document.getElementById(
          'reading-time'
        ).innerHTML = `<i class="fa-regular fa-clock"></i> ${readingTime} min read`;
      });

      // Delete a blog
      function deleteBlog(blogId) {
        const confirmed = confirm(
          'Are you sure to delete this blog? This cannot be undo?'
        );
        if (confirmed) {
          fetch(`/blogs/${blogId}?_method=DELETE`, {
            method: 'POST',
          })
            .then((response) => {
              if (response.ok) {
                window.location.href = '/blogs';
              } else {
                showNotification('Failed to delete the blog', 3500);
              }
            })
            .catch((error) => {
              console.error('Error:', error);
              alert('An error occurred');
            });
        }
      }

      // Add a new Comment
      const commentForm = document.getElementById('commentForm');
      if (commentForm) {
        commentForm.addEventListener('submit', async function (event) {
          event.preventDefault();

          const commentData = new URLSearchParams(new FormData(commentForm));
          console.log(commentData);
          try {
            const response = await fetch(commentForm.action, {
              method: 'POST',
              headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
              },
              body: commentData.toString(),
            });

            const result = await response.json();

            if (response.ok) {
              commentForm.reset();
              showNotification(result.message, 2500);
              setTimeout(() => {
                location.reload();
              }, 2500);
            } else {
              throw new Error(result.message || 'Login failed');
            }
          } catch (error) {
            alert(error.message);
          }
        });
      }

      // Delete a Comment
      function deleteComment(commentId) {
        const confirmed = confirm(
          'Are you sure to delete this comment? This cannot be undo.'
        );
        if (confirmed) {
          fetch(`/blogs/comments/${commentId}?_method=DELETE`, {
            method: 'POST',
          })
            .then((response) => {
              if (response.ok) {
                commentForm.reset();
                showNotification('Comment deleted successfully', 2500);
                document.getElementById(`comment-${commentId}`).remove();
              } else {
                alert('Failed to delete the comment');
              }
            })
            .catch((error) => {
              console.error('Error:', error);
              alert('An error occurred');
            });
        }
      }

      // Likes show dynamically on the frontend with API call
      const user = `<%= user %>`;
      if (user) {
        document.querySelectorAll('.like-button2').forEach((likeButton) => {
          likeButton.addEventListener('click', async () => {
            const group = likeButton.closest('.group');
            const likeIcon = likeButton.querySelector('i');
            const likesCount = group.querySelector('.likes-count');
            const tooltip = group.querySelector('#like-tooltip');

            // Toggle UI instantly
            const liked = likeIcon.classList.contains('text-red-500');
            if (!liked) {
              likeIcon.classList.add('fa-solid', 'text-red-500', 'heart-beat');
              likeIcon.classList.remove('fa-regular');
              if (tooltip) tooltip.innerText = 'Unlike';
              if (likesCount)
                likesCount.innerText = parseInt(likesCount.innerText) + 1;
            } else {
              likeIcon.classList.remove(
                'fa-solid',
                'text-red-500',
                'heart-beat'
              );
              likeIcon.classList.add('fa-regular');
              if (tooltip) tooltip.innerText = 'Like';
              if (likesCount)
                likesCount.innerText = parseInt(likesCount.innerText) - 1;
            }

            try {
              const response = await fetch('/blogs/<%= blog._id %>/like', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
              });
              if (response.ok) {
                const data = await response.json();
                document.querySelectorAll('.likes-count').forEach((el) => {
                  el.innerText = data.likes;
                });
                document.querySelectorAll('.like-button2').forEach((btn) => {
                  const icon = btn.querySelector('i');
                  if (data.message === 'Liked') {
                    icon.classList.add(
                      'fa-solid',
                      'text-red-500',
                      'heart-beat'
                    );
                    icon.classList.remove('fa-regular');
                  } else {
                    icon.classList.remove(
                      'fa-solid',
                      'text-red-500',
                      'heart-beat'
                    );
                    icon.classList.add('fa-regular');
                  }
                });
              }
            } catch (error) {
              console.error('Error:', error.message);
            }
          });
        });
      }

      // Copy Code Button
      document.addEventListener('DOMContentLoaded', function () {
        const codeBlocks = document.querySelectorAll('#blog-content pre code');

        codeBlocks.forEach((block) => {
          const copyButton = document.createElement('button'); // Create copy button
          copyButton.className = 'copy-btn';
          copyButton.innerHTML = `<i class="fa-regular fa-clone"></i><span class="tooltip-code">Copy</span>`;

          // Append the button to the pre element
          const pre = block.parentElement;
          pre.style.position = 'relative';
          pre.appendChild(copyButton);

          // Add copy functionality
          copyButton.addEventListener('click', () => {
            const text = block.innerText;
            navigator.clipboard.writeText(text).then(() => {
              copyButton.querySelector('.tooltip-code').textContent = 'Copied!';

              const copyIcon = copyButton.querySelector('i');

              copyIcon.classList.remove('fa-regular', 'fa-clone');
              copyIcon.classList.add('fa-solid', 'fa-check', 'text-green-500');

              setTimeout(() => {
                copyButton.querySelector('.tooltip-code').textContent = 'Copy';
                copyIcon.classList.add('fa-regular', 'fa-clone');
                copyIcon.classList.remove(
                  'fa-solid',
                  'fa-check',
                  'text-green-500'
                );
              }, 2000);
            });
          });
        });
      });

      // Add a View Count for the Blog
      const postId = '<%= blog._id %>';
      // Check if the cookie for this blog post already exists
      const hasViewed = document.cookie
        .split(';')
        .some((item) => item.trim().startsWith(`viewed_${postId}=`));

      // If the user hasn't viewed the blog before (no cookie for this post), start the 20-second timer
      if (!hasViewed) {
        window.onload = function () {
          setTimeout(function () {
            // Send an AJAX request to the server to track the view
            fetch(`/blogs/track-view/${postId}`, {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
              },
            })
              .then((response) => {
                if (response.ok) {
                  // Set a cookie to indicate that the user has viewed this blog post
                  document.cookie = `viewed_${postId}=true; max-age=31536000; path=/`; // Cookie lasts for 1 year
                  console.log('View recorded successfully');
                }
              })
              .catch((error) => {
                console.error('Error recording view:', error);
              });
          }, 10000); // 10 seconds
        };
      }

      // Save or Bookmark Blog
      async function toggleSaveBlog(button) {
        const blogId = button.getAttribute('data-blog-id');
        const isSaved = button.getAttribute('data-saved') === 'true';

        try {
          const response = await fetch(
            `/blogs/${blogId}/${isSaved ? 'unsave' : 'save'}`,
            {
              method: 'POST',
            }
          );
          const result = await response.json();

          if (result.success) {
            // Toggle button state
            button.setAttribute('data-saved', !isSaved);
            button.classList.toggle('bg-blue-500');
            button.classList.toggle('text-white');
            button.classList.toggle('hover:bg-gray-200');
            button.classList.toggle('dark:hover:bg-gray-700');
            button.classList.toggle('text-gray-900');
            button.classList.toggle('dark:text-gray-200');
            let icon = button.querySelector('i');
            if (isSaved) {
              icon.classList.remove('fa-solid');
              icon.classList.add('fa-regular');
            } else {
              icon.classList.remove('fa-regular');
              icon.classList.add('fa-solid');
            }

            showNotification(
              isSaved
                ? 'Blog Unsaved Successfully!'
                : 'Blog Saved Successfully!',
              3000
            );
          } else {
            alert(result.message);
          }
        } catch (error) {
          alert('An error occurred while updating the blog save status.');
        }
      }
    </script>
    <script async defer src="/public/js/scrollToTop.js"></script>
  </body>
</html>
