<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Register</title>
    <link rel="stylesheet" href="/public/css/tailwind.css" />
    <style>
      @layer utilities {
        .dark input:-webkit-autofill {
          color: #ffffff !important;
          -webkit-text-fill-color: #ffffff !important;
          caret-color: #ffffff !important;
          background-color: transparent !important;
          transition: background-color 5000s ease-in-out 0s;
        }
      }

      .spin-loader {
        animation: rotation 2.25s linear infinite;
      }

      @keyframes rotation {
        0% {
          transform: rotate(0deg);
        }
        100% {
          transform: rotate(360deg);
        }
      }
    </style>
  </head>
  <body
    class="min-h-screen relative bg-gray-100 dark:bg-gray-900 text-gray-900 dark:text-gray-100"
  >
    <%- include('../partials/navbar') %>

    <div class="container mx-auto px-4 py-10 md:py-14 flex justify-center">
      <div
        class="w-full max-w-md bg-white dark:bg-gray-800 shadow-md rounded-lg p-6"
      >
        <h2 class="text-2xl font-bold mb-6 text-gray-800 dark:text-gray-100">
          Register
        </h2>
        <form
          id="registerForm"
          action="/register"
          method="POST"
          class="space-y-4"
        >
          <div>
            <label for="username" class="block text-gray-700 dark:text-gray-300"
              >Username</label
            >
            <input
              type="text"
              name="username"
              id="username"
              placeholder="John Doe"
              autocomplete="name"
              required
              class="w-full mt-1 p-2 focus:outline-none border border-gray-300 dark:border-gray-700 rounded-md bg-gray-50 dark:bg-gray-700 text-gray-900 dark:text-gray-100"
            />
          </div>

          <div>
            <label
              for="useremail"
              class="block text-gray-700 dark:text-gray-300"
              >User Email</label
            >
            <div class="flex gap-1 font sm:justify-between">
              <input
                type="email"
                name="useremail"
                id="useremail"
                placeholder="johndoe@gmail.com"
                autocomplete="email"
                required
                class="w-4/5 mt-1 p-2 focus:outline-none border border-gray-300 dark:border-gray-700 rounded-md bg-gray-50 dark:bg-gray-700 text-gray-900 dark:text-gray-100"
              />
              <button
                id="send-otp-btn"
                class="w-1/5 mt-1 p-1 sm:p-2 text-sm sm:text-base bg-blue-500 text-white rounded-md hover:bg-blue-600 transition-colors"
              >
                Get OTP
              </button>
            </div>
          </div>

          <div id="enter-otp-div" class="hidden">
            <label for="password" class="block text-gray-700 dark:text-gray-300"
              >Enter OTP</label
            >
            <input
              id="otp"
              name="otp"
              type="text"
              placeholder="123456"
              class="w-full mt-1 p-2 focus:outline-none border border-gray-300 dark:border-gray-700 rounded-md bg-gray-50 dark:bg-gray-700 text-gray-900 dark:text-gray-100"
              required
            />
          </div>

          <div>
            <label for="password" class="block text-gray-700 dark:text-gray-300"
              >Password</label
            >
            <input
              type="password"
              name="password"
              id="password"
              autocomplete="new-password"
              placeholder="•••••••••••••"
              required
              class="w-full mt-1 p-2 focus:outline-none border border-gray-300 dark:border-gray-700 rounded-md bg-gray-50 dark:bg-gray-700 text-gray-900 dark:text-gray-100"
            />
          </div>

          <div>
            <label
              for="confirm_password"
              class="block text-gray-700 dark:text-gray-300"
              >Confirm Password</label
            >
            <input
              type="password"
              name="confirm_password"
              id="confirm_password"
              autocomplete="new-password"
              placeholder="•••••••••••••"
              required
              class="w-full mt-1 p-2 focus:outline-none border border-gray-300 dark:border-gray-700 rounded-md bg-gray-50 dark:bg-gray-700 text-gray-900 dark:text-gray-100"
            />
          </div>
          <button
            type="submit"
            id="submitButton"
            class="w-full py-2 flex justify-center items-center gap-4 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition-colors"
          >
            <span id="buttonText">Signup</span>
            <span
              id="spin-loader"
              class="spin-loader w-6 h-6 border-4 border-dotted dark:border-white rounded-full hidden"
            ></span>
          </button>
        </form>
      </div>
    </div>
    <%- include('../partials/footer') %>
    <script>
      const form = document.getElementById('registerForm');
      const button = document.getElementById('submitButton');
      const loader = document.getElementById('spin-loader');
      const buttonText = document.getElementById('buttonText');

      form.addEventListener('submit', async (event) => {
        event.preventDefault();

        loader.classList.remove('hidden');
        button.disabled = true;

        const formData = new URLSearchParams(new FormData(form));
        console.log(formData.toString());

        try {
          const response = await fetch('/register', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/x-www-form-urlencoded',
            },
            body: formData.toString(),
          });

          const result = await response.json();

          if (response.ok) {
            loader.classList.add('hidden');
            buttonText.classList.remove('hidden');
            button.disabled = false;
            alert(result.message);
            window.location.href = '/login';
          } else {
            throw new Error(result.error);
          }
        } catch (error) {
          loader.classList.add('hidden');
          buttonText.classList.remove('hidden');
          button.disabled = false;
          alert(error.message);
        }
      });

      // Send OTP
      document
        .getElementById('send-otp-btn')
        .addEventListener('click', async (e) => {
          e.preventDefault();
          const useremail = document.getElementById('useremail').value;
          const response = await fetch('/send-otp', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ useremail }),
          });
          const result = await response.json();
          alert(result.message);

          if (response.status === 200) {
            // Disable the button and start the timer
            document.getElementById('send-otp-btn').disabled = true;
            document.getElementById('send-otp-btn').style.cursor =
              'not-allowed';

            let timeLeft = 300;

            const timerInterval = setInterval(function () {
              let minutes = Math.floor(timeLeft / 60);
              let seconds = timeLeft % 60;
              document.getElementById('send-otp-btn').innerText = `${minutes}:${
                seconds < 10 ? '0' + seconds : seconds
              }`;

              if (timeLeft <= 0) {
                clearInterval(timerInterval);
                document.getElementById('send-otp-btn').disabled = false; // Re-enable the button
                document.getElementById('send-otp-btn').innerText = 'Send OTP'; // Reset the button text
                document.getElementById('send-otp-btn').style.cursor =
                  'default';

                document.getElementById('useremail').readOnly = false; // Re-enable the email field
              }

              timeLeft--;
            }, 1000); // Update every second

            // Disable email field while timer is active
            document.getElementById('useremail').readOnly = true;
            document.getElementById('enter-otp-div').classList.remove('hidden');
          }
        });

      // Validations in Inputs:
      document
        .getElementById('username')
        .addEventListener('input', function (event) {
          this.value = this.value.replace(/\s{2,}/g, ' ');
        });
      document
        .getElementById('otp')
        .addEventListener('input', function (event) {
          this.value = this.value.replace(/[^0-9]/g, '');
        });
    </script>
  </body>
</html>
